{"dependencies":[{"name":"/Users/willis/code/delete-branch-after-merge/package.json","includedInParent":true,"mtime":1526260772238},{"name":"/Users/willis/code/delete-branch-after-merge/node_modules/callbag-pipe/package.json","includedInParent":true,"mtime":1518689781000}],"generated":{"js":"function e(...e){let t=e[0];for(let l=1,n=e.length;l<n;l++)t=e[l](t);return t}module.exports=e;","map":{"mappings":[{"source":"node_modules/callbag-pipe/readme.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/callbag-pipe/readme.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}}],"sources":{"node_modules/callbag-pipe/readme.js":"/**\n * callbag-pipe\n * ------------\n *\n * Utility function for plugging callbags together in chain. This utility\n * actually doesn't rely on Callbag specifics, and is basically the same as\n * Ramda's `pipe` or lodash's `flow`. Anyway, this exists just to play nicely\n * with the ecosystem, and to facilitate the import of the function.\n *\n * `npm install callbag-pipe`\n *\n * Example:\n *\n * Create a source with `pipe`, then pass it to a `forEach`:\n *\n *     const interval = require('callbag-interval');\n *     const forEach = require('callbag-for-each');\n *     const combine = require('callbag-combine');\n *     const pipe = require('callbag-pipe');\n *     const take = require('callbag-take');\n *     const map = require('callbag-map');\n *\n *     const source = pipe(\n *       combine(interval(100), interval(350)),\n *       map(([x, y]) => `X${x},Y${y}`),\n *       take(10)\n *     );\n *\n *     forEach(x => console.log(x))(source); // X2,Y0\n *                                           // X3,Y0\n *                                           // X4,Y0\n *                                           // X5,Y0\n *                                           // X6,Y0\n *                                           // X6,Y1\n *                                           // X7,Y1\n *                                           // X8,Y1\n *                                           // X9,Y1\n *                                           // X9,Y2\n *\n *\n * Or use `pipe` to go all the way from source to sink:\n *\n *     const interval = require('callbag-interval');\n *     const forEach = require('callbag-for-each');\n *     const combine = require('callbag-combine');\n *     const pipe = require('callbag-pipe');\n *     const take = require('callbag-take');\n *     const map = require('callbag-map');\n *\n *     pipe(\n *       combine(interval(100), interval(350)),\n *       map(([x, y]) => `X${x},Y${y}`),\n *       take(10),\n *       forEach(x => console.log(x))\n *     );\n *     // X2,Y0\n *     // X3,Y0\n *     // X4,Y0\n *     // X5,Y0\n *     // X6,Y0\n *     // X6,Y1\n *     // X7,Y1\n *     // X8,Y1\n *     // X9,Y1\n *     // X9,Y2\n *\n *\n * Nesting\n * -------\n *\n * To use pipe inside another pipe, you need to give the inner pipe an\n * argument, e.g. `s => pipe(s, ...`:\n *\n *     const interval = require('callbag-interval');\n *     const forEach = require('callbag-for-each');\n *     const combine = require('callbag-combine');\n *     const pipe = require('callbag-pipe');\n *     const take = require('callbag-take');\n *     const map = require('callbag-map');\n *\n *     pipe(\n *       combine(interval(100), interval(350)),\n *       s => pipe(s,\n *         map(([x, y]) => `X${x},Y${y}`),\n *         take(10)\n *       ),\n *       forEach(x => console.log(x))\n *     );\n *\n *\n * This means you can use pipe to create a new operator:\n *\n *     const mapThenTake = (f, amount) =>\n *       s => pipe(s, map(f), take(amount));\n *\n *     pipe(\n *       combine(interval(100), interval(350)),\n *       mapThenTake(([x, y]) => `X${x},Y${y}`, 10),\n *       forEach(x => console.log(x))\n *     );\n *\n */\n\nfunction pipe(...cbs) {\n  let res = cbs[0];\n  for (let i = 1, n = cbs.length; i < n; i++) res = cbs[i](res);\n  return res;\n}\n\nmodule.exports = pipe;\n"},"lineCount":111}},"hash":"20e8f0d336b97ebcf3987a638625e860","cacheData":{"env":{}}}