{"dependencies":[{"name":"/Users/willis/code/delete-branch-after-merge/package.json","includedInParent":true,"mtime":1526260772238},{"name":"/Users/willis/code/delete-branch-after-merge/node_modules/callbag-share/package.json","includedInParent":true,"mtime":1517321469000}],"generated":{"js":"const e=e=>{let l,t=[];return function(n,s){0===n&&(t.push(s),1===t.length&&e(0,(e,n)=>{if(0===e)l=n;else for(let l of t.slice(0))l(e,n);2===e&&(t=[])}),s(0,(e,n)=>{if(0!==e)if(2===e){const e=t.indexOf(s);e>-1&&t.splice(e,1),t.length||l(2)}else l(e,n)}))}};module.exports=e;","map":{"mappings":[{"source":"node_modules/callbag-share/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/callbag-share/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/callbag-share/index.js":"const share = source => {\n  let sinks = [];\n  let sourceTalkback;\n  return function shared(start, sink) {\n    if (start !== 0) return;\n    sinks.push(sink);\n    if (sinks.length === 1) {\n      source(0, (t, d) => {\n        if (t === 0) sourceTalkback = d;\n        else for (let s of sinks.slice(0)) s(t, d);\n        if (t === 2) sinks = [];\n      });\n    }\n    sink(0, (t, d) => {\n      if (t === 0) return;\n      if (t === 2) {\n        const i = sinks.indexOf(sink);\n        if (i > -1) sinks.splice(i, 1);\n        if (!sinks.length) sourceTalkback(2);\n      } else {\n        sourceTalkback(t, d);\n      }\n    });\n  }\n}\n\nmodule.exports = share;\n"},"lineCount":28}},"hash":"25ab2a406e50467f7f902ddec3b3ea61","cacheData":{"env":{}}}