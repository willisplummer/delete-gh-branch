{"dependencies":[{"name":"/Users/willis/code/delete-branch-after-merge/package.json","includedInParent":true,"mtime":1526260772238},{"name":"/Users/willis/code/delete-branch-after-merge/node_modules/callbag-combine/package.json","includedInParent":true,"mtime":1522843427000}],"generated":{"js":"const e={},r=(...r)=>(t,n)=>{if(0!==t)return;const o=r.length;if(0===o)return n(0,()=>{}),n(1,[]),void n(2);let f=o,s=o,i=o;const l=new Array(o),c=new Array(o),a=(e,r)=>{if(2===e)for(let e=0;e<o;e++)c[e](2)};r.forEach((r,t)=>{l[t]=e,r(0,(r,u)=>{if(0===r)c[t]=u,0==--f&&n(0,a);else if(1===r){const r=s?l[t]===e?--s:s:0;if(l[t]=u,0===r){const e=new Array(o);for(let r=0;r<o;++r)e[r]=l[r];n(1,e)}}else 2===r?0==--i&&n(2):n(r,u)})})};module.exports=r;","map":{"mappings":[{"source":"node_modules/callbag-combine/readme.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/callbag-combine/readme.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}}],"sources":{"node_modules/callbag-combine/readme.js":"/**\n * callbag-combine\n * ---------------\n *\n * Callbag factory that combines the latest data points from multiple (2 or\n * more) callbag sources. It delivers those latest values as an array. Works\n * with both pullable and listenable sources.\n *\n * `npm install callbag-combine`\n *\n * Example:\n *\n *     const interval = require('callbag-interval');\n *     const observe = require('callbag-observe');\n *     const combine = require('callbag-combine');\n *\n *     const source = combine(interval(100), interval(350));\n *\n *     observe(x => console.log(x))(source); // [2,0]\n *                                           // [3,0]\n *                                           // [4,0]\n *                                           // [5,0]\n *                                           // [6,0]\n *                                           // [6,1]\n *                                           // [7,1]\n *                                           // [8,1]\n *                                           // ...\n */\n\nconst EMPTY = {};\n\nconst combine = (...sources) => (start, sink) => {\n  if (start !== 0) return;\n  const n = sources.length;\n  if (n === 0) {\n    sink(0, () => {});\n    sink(1, []);\n    sink(2);\n    return;\n  }\n  let Ns = n; // start counter\n  let Nd = n; // data counter\n  let Ne = n; // end counter\n  const vals = new Array(n);\n  const sourceTalkbacks = new Array(n);\n  const talkback = (t, d) => {\n    if (t !== 2) return;\n    for (let i = 0; i < n; i++) sourceTalkbacks[i](2);\n  };\n  sources.forEach((source, i) => {\n    vals[i] = EMPTY;\n    source(0, (t, d) => {\n      if (t === 0) {\n        sourceTalkbacks[i] = d;\n        if (--Ns === 0) sink(0, talkback);\n      } else if (t === 1) {\n        const _Nd = !Nd ? 0 : vals[i] === EMPTY ? --Nd : Nd;\n        vals[i] = d;\n        if (_Nd === 0) {\n          const arr = new Array(n);\n          for (let j = 0; j < n; ++j) arr[j] = vals[j];\n          sink(1, arr);\n        }\n      } else if (t === 2) {\n        if (--Ne === 0) sink(2);\n      } else {\n        sink(t, d);\n      }\n    });\n  });\n};\n\nmodule.exports = combine;\n"},"lineCount":74}},"hash":"c7d644e94747e6cb54d1f4ca0d7e940f","cacheData":{"env":{}}}